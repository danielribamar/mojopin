@using Umbraco.Web.Models
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "HeaderAndFooter.cshtml";
    var title = Model.Content.GetPropertyValue("contentTitle");
    var subtitle = Model.Content.GetPropertyValue<string>("contentSubtitle");

    //var background = Umbraco.TypedMedia(Model.Content.GetPropertyValue<int>("contentHeaderImage")).GetCropUrl(1366, 768, imageCropMode: ImageCropMode.Crop);

    var background = Umbraco.TypedMedia(Model.Content.GetPropertyValue<int>("contentHeaderImage")).Url();
}
<header class="intro-header" style="background-image: url('@background'); background-color: #@Model.Content.GetPropertyValue("contentHeaderColor")">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="site-heading">
                    <h1 class="title">@Model.Content.Name</h1>
                        @if (!string.IsNullOrEmpty(subtitle))
                        {
                            <hr class="small">
                        }
                    <span class="subheading">@Html.Raw(subtitle)</span>
                    <br /><br /><br /><br /><br />
                    </div>
                </div>
            </div>
        </div>
    </header>

    <div class="container">
        @Html.Partial("ArticleList", Model.Content.Children.Where(p => p.DocumentTypeAlias.Equals("Article")).OrderByDescending(p => p.GetPropertyValue<DateTime>("contentDate")))
    </div>
