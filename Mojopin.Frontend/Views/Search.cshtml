@using MojoPin.Frontend.Helpers
@using Umbraco.Web.Models
@using Mojopin.Frontend.Services
@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "HeaderAndFooter.cshtml";
    Layout = "HeaderAndFooter.cshtml";
    var umbracoHelper = new UmbracoHelper(UmbracoContext.Current);
    var title = Model.Content.GetPropertyValue("contentTitle");
    var subtitle = Model.Content.GetPropertyValue<string>("contentSubtitle");
    var titleColor = Model.Content.GetPropertyValue("contentTitleColor");
    var media = Umbraco.TypedMedia(Model.Content.GetPropertyValue<int>("contentHeaderImage")).GetCropUrl(quality: 30);

    var searchService = new SearchService();
    var items = searchService.FeedSearch(1, 0, term: Request.QueryString["q"].ToString());
}
<header class="intro-header" style="background-image: url('@media'); background-color: #@Model.Content.GetPropertyValue("contentHeaderColor")">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="site-heading">
                    <h1 class="title" style="color: @titleColor">
                        @items.Count() resultado(s) para @Request.QueryString["q"]
                    </h1>
                    @if (!string.IsNullOrEmpty(subtitle))
                    {
                        <hr class="small newfont" style="color: @titleColor">
                    }
                    <span class="subheading">@Html.Raw(subtitle)</span>
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
</header>

<div class="container" style="padding-bottom: 50px">
    @Html.Partial("SearchList", items)
</div>

